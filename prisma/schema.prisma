generator client {
  provider = "prisma-client-js"
  output = "../node_modules/prisma-client"
}

// datasource db {
//   provider = "sqlite"
//   url      = env("DATABASE_URL")
// }

datasource db {
 provider = "postgresql"
 url      = env("DATABASE_URL")
}

enum Title {
  NOOB
  PORTE_CHAUSSETTES
  RODEUR_TIMIDE
  DISCIPLINAIRE_DEBUTANT
  SCRIBE_DES_TACHES
  MERCENAIRE_ORGANISE
  TEMPLIER_DE_L_EFFORT
  ELU_DES_HABITUDES
  PALADIN_DU_QUOTIDIEN
  ARCHIMAGE_DE_LA_CONSTANCE
}

model User {
  id          Int         @id @default(autoincrement())
  userName    String      @unique
  mail        String      @unique 
  password    String
  createdAt   DateTime    @default(now())
  xp          Int         @default(0)
  level       Int         @default(0)
  title       Title       @default(NOOB)
  quests      Quest[]     
  logs        QuestLog[]  
}

enum Frequency {
  NONE
  DAILY
  WEEKLY
  MONTHLY
}
model Quest {
  id           Int        @id @default(autoincrement())
  title        String    
  description  String
  createdAt    DateTime   @default(now())
  scheduledAt  DateTime? 
  frequency    Frequency  @default(DAILY) 
  repeat       Boolean    
  userId       Int
  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  logs         QuestLog[]  
}

model QuestLog {
  id            Int         @id @default(autoincrement())
  questId       Int
  quest         Quest       @relation(fields: [questId], references: [id], onDelete: Cascade)
  userId        Int
  user          User        @relation(fields: [userId], references: [id])
  completedAt   DateTime    @default(now())
}

